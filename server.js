var mysql = require('mysql');var db = mysql.createConnection({	host: 'localhost',	user: 'root',	password: '[hidden]',	database: 'chaterix'});db.connect(function(err){	if(err) console.log(err)});var http = require('http'),    express = require('express'),    app = express(),    jade = require('jade'),    server = http.createServer(app),		bodyParser = require('body-parser');var io = require('socket.io');var escape = require('escape-html');io = io.listen(server);var fs = require("fs");var ss = require('socket.io-stream');var path = require('path');var Entities = require('html-entities').AllHtmlEntities;entities = new Entities();server.listen(3000); app.set('views', __dirname + '/views');app.set('view engine', 'jade');app.set("view options", { layout: false });app.use(express.static(__dirname + '/public'));app.use(bodyParser.urlencoded({ extended: false }));app.get('/', function(req, res){    res.render('home.jade');	console.log('req');});var ip = "";var email = "";var username = "";var password = "";var user_ids = "";var refferer =  "";//Assign POST variables;app.post('/',function(req,res, err){  email=req.body.email;  password=req.body.pass;  user_ids=req.body.userid;  ip = req.headers['x-forwarded-for'] || req.connection.remoteAddress;  res.redirect("/");  refferer = req.header('Referer');});var usersfinal = [];var usersids = [];	//Send latest online users.s	setInterval(function(){	console.log('ping');	io.sockets.emit('heartbeat_users', {	'latest_users' : usersfinal	});	},5000);//Client connection starts;io.sockets.on('connection', function (socket) {	var handshake = socket.handshake;	var agent = handshake.query.clientura;	var userids = handshake.query.userid;	socket['final_user'] = "def";	socket['user_ip'] = ip;	socket['user_email'] = email;	socket['user_id'] = user_ids;	socket['ref'] = refferer;	console.log("UserID: "+user_ids+", ip: "+ip);	email = "";	username = "";	password = "";	user_ids = "";	ip = "";	refferer = "";	//Get users username based on his ID;		if(agent != "android" && socket['user_id'] != "" && socket['ref'].indexOf("http://chaterix.com") >= 0){	//	if(socket['user_id'] != ""){	db.query("SELECT username FROM users WHERE id='"+socket['user_id']+"' AND email='"+socket['user_email']+"'", function(error, results, fields)	{	if(results.length == 1){	socket['final_user'] = results[0].username;	db.query("INSERT INTO users_online (userID, username, ip) VALUES ('"+socket['user_id']+"', '"+socket['final_user']+"', '"+socket['user_ip']+"')");	usersfinal.push(socket['final_user']);	usersids[socket['user_id']] = socket['final_user'];		socket.emit('loadusers', {		'list' : usersfinal,		'myself' : socket['final_user'],	});	socket.broadcast.emit('new_user', {		'username' : socket['final_user']	});	}	else{	socket.disconnect();	}	});	}	else if(agent == "android"){	db.query("SELECT username FROM users WHERE id='"+userids+"'", function(error, results, fields)	{	socket['final_user'] = results[0].username;	usersfinal.push(socket['final_user']);		socket.emit('loadusers', {		'list' : usersfinal,		'myself' : socket['final_user']		});		socket.broadcast.emit('new_user', {		'username' : socket['final_user']		});		});	}	else{	console.log('piss-off');	socket.disconnect();	}		//Load previous messages;	db.query("SELECT * FROM messages", function (error, results, fields) 	{		for(var i=0;i<results.length;i++)		{			var obj = results[i];			socket.emit('loadmsg', {			'message' : entities.encode(obj.message),			'nickname' : obj.user_id,			'time' : obj.time									});		}	});				//On message by current client;    socket.on('message', function (message) {	console.log(message);        socket.broadcast.emit('message', {            'message' : entities.encode(message),            'pseudo' : socket['final_user']        });	var Ops = 'INSERT INTO messages (user_id, message) VALUES ("'+socket['final_user']+'", ?)'	db.query(Ops,message);    });	//Request userId;	socket.on('getuser', function(data){	var d = new Date();	var n = d.getMilliseconds();		var usrnick = data['username'];	var usrnickid = usersids.indexOf(usrnick);	console.log(usrnick);	db.query("SELECT * FROM users WHERE id='"+usrnickid+"'", function (error, results, fields){	socket.emit('returnuser', {	'id' : usrnickid,	'first_name' : results[0].first_name,	'last_name' : results[0].last_name,	'username' : results[0].username,	'avatar' : results[0].avatar,	'dob' : results[0].dob,	'dor' : results[0].date_of_reg,	'country' : results[0].country,	'level' : results[0].level	});		var d2 = new Date();	var n2 = d2.getMilliseconds();	console.log("Exec Time: "+(Math.abs(n2 - n) / 1000)+" Seconds");
	}); 	});			socket.on('mobile_ping', function(message){	console.log('mobile');		socket.broadcast.emit('message', {			'message' : entities.encode(message),			'pseudo' : 'Android Client'			});			});		socket.on('disconnect', function(){	console.log('pong-ping');	db.query("DELETE FROM users_online WHERE username='"+socket['final_user']+"'");	var index = usersfinal.indexOf(socket['final_user']);	usersfinal.splice(index, 1);	});				});	io.of('/').on('connection', function(socket){		ss(socket).on('profile-image', function(stream, data){			var filename = path.basename			stream.pipe(fs.createWriteStream(filename));			console.log(filename);		});	});